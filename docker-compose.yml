version: '3.8'

services:
  # PostgreSQL for Auth Service
  postgres:
    image: postgres:15
    container_name: task-flow-postgres
    environment:
      POSTGRES_DB: taskflow_auth
      POSTGRES_USER: taskflow
      POSTGRES_PASSWORD: taskflow123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskflow"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB for Task Service
  mongodb:
    image: mongo:7
    container_name: task-flow-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: taskflow
      MONGO_INITDB_ROOT_PASSWORD: taskflow123
      MONGO_INITDB_DATABASE: taskflow_tasks
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # RabbitMQ for Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    container_name: task-flow-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: taskflow
      RABBITMQ_DEFAULT_PASS: taskflow123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Session Storage and Caching
  redis:
    image: redis:7-alpine
    container_name: task-flow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  mongodb_data:
  rabbitmq_data:
  redis_data:

networks:
  default:
    name: task-flow-network
